"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[6417],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),i=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=i(e.components);return a.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=i(n),k=r,m=u["".concat(o,".").concat(k)]||u[k]||d[k]||l;return n?a.createElement(m,s(s({ref:t},c),{},{components:n})):a.createElement(m,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,s=new Array(l);s[0]=k;var p={};for(var o in t)hasOwnProperty.call(t,o)&&(p[o]=t[o]);p.originalType=e,p[u]="string"==typeof e?e:r,s[1]=p;for(var i=2;i<l;i++)s[i]=n[i];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8372:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>i});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:1,description:"Back-End/Raspberri Pi API Documentation"},s="API",p={unversionedId:"api-specification/api",id:"api-specification/api",title:"API",description:"Back-End/Raspberri Pi API Documentation",source:"@site/docs/api-specification/api.md",sourceDirName:"api-specification",slug:"/api-specification/api",permalink:"/project-tutraffic/docs/api-specification/api",draft:!1,editUrl:"https://github.com/Capstone-Projects-2023-Spring/project-tutraffic/edit/main/documentation/docs/api-specification/api.md",tags:[],version:"current",lastUpdatedBy:"Adam Wong",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Back-End/Raspberri Pi API Documentation"},sidebar:"docsSidebar",previous:{title:"API Specification",permalink:"/project-tutraffic/docs/category/api-specification"},next:{title:"Classes",permalink:"/project-tutraffic/docs/api-specification/classes"}},o={},i=[{value:"Backend REST API",id:"backend-rest-api",level:2},{value:"POST /users/create",id:"post-userscreate",level:3},{value:"PUT /users/update/{id}",id:"put-usersupdateid",level:3},{value:"DELETE /users/delete/{id}",id:"delete-usersdeleteid",level:3},{value:"GET /users/login",id:"get-userslogin",level:3},{value:"GET /users/get/{id}",id:"get-usersgetid",level:3},{value:"Raspberri Pi API",id:"raspberri-pi-api",level:2},{value:"POST /createNode/{location}",id:"post-createnodelocation",level:3},{value:"PUT /update/{locationID, number of spots}",id:"put-updatelocationid-number-of-spots",level:3},{value:"DELETE /location/{locationID}",id:"delete-locationlocationid",level:3}],c={toc:i};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"api"},"API"),(0,r.kt)("h2",{id:"backend-rest-api"},"Backend REST API"),(0,r.kt)("h3",{id:"post-userscreate"},"POST /users/create"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:"),(0,r.kt)("br",{parentName:"p"}),"\n","Create a new user and store it in the database."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Valid Request Body:"),"     "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "email": String,\n    "password": String\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Successful call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 201,\n    "body": "A new user has been successfully created."\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Failed call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 409,\n    "body": "Email already in use."\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 400,\n    "message": "Missing data in request body."\n}\n')),(0,r.kt)("h3",{id:"put-usersupdateid"},"PUT /users/update/{id}"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:"),(0,r.kt)("br",{parentName:"p"}),"\n","Update a user's data in the database. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Path Variable:"),"     "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"{id}: String")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Valid Request Body:"),"     "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "email": String,\n    "password": String\n}\n')),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "email": String\n}\n')),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "password": String\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Successful call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "body": "User with ID: {id} has been updated."\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Failed call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 409,\n    "body": "No fields updated. Email already in use."\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 409,\n    "body": "User with ID: {id} does not exist."\n}\n')),(0,r.kt)("h3",{id:"delete-usersdeleteid"},"DELETE /users/delete/{id}"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:"),(0,r.kt)("br",{parentName:"p"}),"\n","Delete an existing user from the database.  "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Path Variable:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"{id}: String")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Valid Request Body:"),(0,r.kt)("br",{parentName:"p"}),"\n","No request body required."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Successful call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 200,\n    "body": "User with ID: {id} has been deleted."\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Failed call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 409,\n    "body": "User with ID: {id} does not exist."\n}\n')),(0,r.kt)("h3",{id:"get-userslogin"},"GET /users/login"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:"),(0,r.kt)("br",{parentName:"p"}),"\n","Verify user login information."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Valid Request Body:"),"     "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "email": String,\n    "password": String\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Successful call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"id: Integer\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Failed call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 409,\n    "body": "User with ID: {id} does not exist."\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 409,\n    "body": "Incorrect password."\n}\n')),(0,r.kt)("h3",{id:"get-usersgetid"},"GET /users/get/{id}"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:"),(0,r.kt)("br",{parentName:"p"}),"\n","Get user email from an ID."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Valid Request Body:"),(0,r.kt)("br",{parentName:"p"}),"\n","No request body required."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Successful call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"email: String\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Failed call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "status": 409,\n    "body": "User with ID: {id} does not exist."\n}\n')),(0,r.kt)("h2",{id:"raspberri-pi-api"},"Raspberri Pi API"),(0,r.kt)("h3",{id:"post-createnodelocation"},"POST /createNode/{location}"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:"),(0,r.kt)("br",{parentName:"p"}),"\n","Create node at specific location.  "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"{location}: String")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Successful call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "success": "200: updated properly",\n    "LocationID": Integer\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Failed call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "error": "401: invalid location"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "error": "404: connection broken"\n}\n')),(0,r.kt)("h3",{id:"put-updatelocationid-number-of-spots"},"PUT /update/{locationID, number of spots}"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:"),(0,r.kt)("br",{parentName:"p"}),"\n","Rasberry pi sends information about the number of spots at a specific location. "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"{locationID}: int   "),(0,r.kt)("li",{parentName:"ul"},"{number of spots}: int")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Successful call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "success": "200: updated properly"\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Failed call:"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "error": "401: invalid location"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "error": "402: invalid invalid number of spots"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "error": "404: connection broken"\n}\n')),(0,r.kt)("h3",{id:"delete-locationlocationid"},"DELETE /location/{locationID}"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Description:"),(0,r.kt)("br",{parentName:"p"}),"\n","Delete node with locationID.   "),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Parameters:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"{locationID}: int")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Successful call:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "success", "200: deleted sucessfully"\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Failed call:"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "error": "401: invalid location"\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'{\n    "error": "404: connection broken"\n}\n')))}u.isMDXComponent=!0}}]);