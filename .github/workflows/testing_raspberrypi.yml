# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Testing RaspberryPi

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - 'RaspberryPi/**'
      - '.github/workflows/testing_raspberrypi.yml'

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install ubuntu dependencies
      run: sudo apt-get install build-essential libcap-dev
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8
        python -m pip install numpy
        python -m pip install opencv-python
        python -m pip install -r testing/python/requirements.txt
    - name: Create .json containing secrets.
      env:
          KEY: ${{ secrets.TUTRAFFIC_FIREBASE_KEY_64 }}
      run: echo $KEY | base64 -d > tutraffic-firebase-key.json
      working-directory: ./frontend
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      working-directory: ./RaspberryPi
      run: |
        pytest
