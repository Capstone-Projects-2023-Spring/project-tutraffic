name: Deploy to Firebase Hosting

on:
  push:
    branches: [ main ]
jobs:
  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master
      - name: Setup node
        uses: actions/setup-node@master
        with:
          node-version: '18.x'
      - name: Create .env containing secrets.
        working-directory: ./frontend
        env:
          API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REF_URL: ${{ secrets.REACT_APP_FIREBASE_REF_URL }}
          STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          GOOGLEMAP_API_KEY: ${{ secrets.REACT_APP_GOOGLEMAP_API_KEY }}
        run: |
          cat <<EOF > .env
          REACT_APP_FIREBASE_API_KEY="$API_KEY"
          REACT_APP_FIREBASE_AUTH_DOMAIN="$AUTH_DOMAIN"
          REACT_APP_FIREBASE_PROJECT_ID="$PROJECT_ID"
          REACT_APP_FIREBASE_REF_URL="$REF_URL"
          REACT_APP_FIREBASE_APP_ID="$APP_ID"
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID="$MESSAGING_SENDER_ID"
          REACT_APP_FIREBASE_STORAGE_BUCKET="$STORAGE_BUCKET"
          REACT_APP_GOOGLEMAP_API_KEY="$GOOGLEMAP_API_KEY"
          EOF
      - name: Install Dependencies
        working-directory: ./frontend
        run: npm install --legacy-peer-deps
      - name: Build
        working-directory: ./frontend
        run: npm run build --prod
      - name: Deploy angular app to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.firebase_token }}
          PROJECT_PATH: ./frontend